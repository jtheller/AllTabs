{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/theme-5641d27f.js","../node_modules/@ionic/core/dist/esm-es5/ion-avatar_3.entry.js"],"names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","_a","length","Object","assign","getClassMap","classes","map","getClassList","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","url","ev","direction","animation","router","this","test","document","querySelector","preventDefault","push","Avatar","hostRef","prototype","render","class","style","ios","md","Badge","mode","Thumbnail"],"mappings":"yJAAA,mJAEIA,EAAc,SAASA,YAAYC,EAAUC,GAC/C,OAAgC,OAAzBA,EAAGC,QAAQF,IAOhBG,EAAqB,SAASA,mBAAmBC,EAAOC,GAC1D,IAAIC,EAEJ,MAAwB,kBAAVF,GAAsBA,EAAMG,OAAS,EAAIC,OAAOC,SAAQH,EAAK,CACzE,aAAa,IACT,aAAeF,IAAS,EAAME,GAAKD,GAAeA,GAkBtDK,EAAc,SAASA,YAAYC,GACrC,IAAIC,EAAM,GAIV,OApBiB,SAASC,aAAaF,GACvC,YAAgBG,IAAZH,GACUI,MAAMC,QAAQL,GAAWA,EAAUA,EAAQM,MAAM,MAChDC,QAAO,SAAUC,GAC5B,OAAY,MAALA,KACNP,KAAI,SAAUO,GACf,OAAOA,EAAEC,UACRF,QAAO,SAAUC,GAClB,MAAa,KAANA,KAIJ,GAKPN,CAAaF,GAASU,SAAQ,SAAUF,GACtC,OAAOP,EAAIO,IAAK,KAEXP,GAGLU,EAAS,uBAETC,EAAU,SAASA,QAAQC,EAAKC,EAAIC,EAAWC,GACjD,OAAO,iBAAU,OAAQ,OAAQ,GAAQ,WACvC,IAAIC,EACJ,OAAO,YAAYC,MAAM,SAAUvB,GACjC,OAAW,MAAPkB,GAA0B,MAAXA,EAAI,KAAeF,EAAOQ,KAAKN,KAChDI,EAASG,SAASC,cAAc,gBAGpB,MAANP,GACFA,EAAGQ,iBAGE,CAAC,EAENL,EAAOM,KAAKV,EAAKE,EAAWC,KAI3B,CAAC,GAEN,W,gCC/DR,sKAMIQ,EAEJ,WACE,SAASA,OAAOC,GACd,YAAiBP,KAAMO,GASzB,OANAD,OAAOE,UAAUC,OAAS,WACxB,OAAO,YAAE,IAAM,CACbC,MAAO,YAAWV,OACjB,YAAE,OAAQ,QAGRM,OAXT,GAcAA,EAAOK,MAAQ,CACbC,IApBiB,4PAqBjBC,GApBgB,6PAsBlB,IAGIC,EAEJ,WACE,SAASA,MAAMP,GACb,YAAiBP,KAAMO,GAYzB,OATAO,MAAMN,UAAUC,OAAS,WACvB,IAAIhC,EAEAsC,EAAO,YAAWf,MACtB,OAAO,YAAE,IAAM,CACbU,MAAO,YAAmBV,KAAKzB,OAAQE,EAAK,GAAIA,EAAGsC,IAAQ,EAAMtC,KAChE,YAAE,OAAQ,QAGRqC,MAdT,GAiBAA,EAAMH,MAAQ,CACZC,IAvBgB,kjCAwBhBC,GAvBe,+nCAyBjB,IAEIG,EAEJ,WACE,SAASA,UAAUT,GACjB,YAAiBP,KAAMO,GASzB,OANAS,UAAUR,UAAUC,OAAS,WAC3B,OAAO,YAAE,IAAM,CACbC,MAAO,YAAWV,OACjB,YAAE,OAAQ,QAGRgB,UAXT,GAcAA,EAAUL,MAlBS","file":"static/js/18.2aebfb2c.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\n\nvar hostContext = function hostContext(selector, el) {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nvar createColorClasses = function createColorClasses(color, cssClassMap) {\n  var _a;\n\n  return typeof color === 'string' && color.length > 0 ? Object.assign((_a = {\n    'ion-color': true\n  }, _a[\"ion-color-\" + color] = true, _a), cssClassMap) : cssClassMap;\n};\n\nvar getClassList = function getClassList(classes) {\n  if (classes !== undefined) {\n    var array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(function (c) {\n      return c != null;\n    }).map(function (c) {\n      return c.trim();\n    }).filter(function (c) {\n      return c !== '';\n    });\n  }\n\n  return [];\n};\n\nvar getClassMap = function getClassMap(classes) {\n  var map = {};\n  getClassList(classes).forEach(function (c) {\n    return map[c] = true;\n  });\n  return map;\n};\n\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nvar openURL = function openURL(url, ev, direction, animation) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var router;\n    return __generator(this, function (_a) {\n      if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        router = document.querySelector('ion-router');\n\n        if (router) {\n          if (ev != null) {\n            ev.preventDefault();\n          }\n\n          return [2\n          /*return*/\n          , router.push(url, direction, animation)];\n        }\n      }\n\n      return [2\n      /*return*/\n      , false];\n    });\n  });\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","import { r as registerInstance, h, H as Host } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { c as createColorClasses } from './theme-5641d27f.js';\nvar avatarIosCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:48px;height:48px}\";\nvar avatarMdCss = \":host{border-radius:var(--border-radius);display:block}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}:host{--border-radius:50%;width:64px;height:64px}\";\n\nvar Avatar =\n/** @class */\nfunction () {\n  function Avatar(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  Avatar.prototype.render = function () {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"slot\", null));\n  };\n\n  return Avatar;\n}();\n\nAvatar.style = {\n  ios: avatarIosCss,\n  md: avatarMdCss\n};\nvar badgeIosCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{border-radius:10px}\";\nvar badgeMdCss = \":host{--background:var(--ion-color-primary, #3880ff);--color:var(--ion-color-primary-contrast, #fff);--padding-top:3px;--padding-end:8px;--padding-bottom:3px;--padding-start:8px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:inline-block;min-width:10px;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);font-size:13px;font-weight:bold;line-height:1;text-align:center;white-space:nowrap;contain:content;vertical-align:baseline}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(:empty){display:none}:host{--padding-top:3px;--padding-end:4px;--padding-bottom:4px;--padding-start:4px;border-radius:4px}\";\n\nvar Badge =\n/** @class */\nfunction () {\n  function Badge(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  Badge.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: createColorClasses(this.color, (_a = {}, _a[mode] = true, _a))\n    }, h(\"slot\", null));\n  };\n\n  return Badge;\n}();\n\nBadge.style = {\n  ios: badgeIosCss,\n  md: badgeMdCss\n};\nvar thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\n\nvar Thumbnail =\n/** @class */\nfunction () {\n  function Thumbnail(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  Thumbnail.prototype.render = function () {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"slot\", null));\n  };\n\n  return Thumbnail;\n}();\n\nThumbnail.style = thumbnailCss;\nexport { Avatar as ion_avatar, Badge as ion_badge, Thumbnail as ion_thumbnail };"],"sourceRoot":""}