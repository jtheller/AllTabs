{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-infinite-scroll_2.entry.js"],"names":["InfiniteScroll","class_1","hostRef","_this","this","ionInfinite","thrPx","thrPc","didFire","isBusy","isLoading","threshold","disabled","position","onScroll","scrollEl","canStart","infiniteHeight","el","offsetHeight","scrollTop","scrollHeight","height","emit","prototype","thresholdChanged","val","lastIndexOf","parseFloat","disabledChanged","enableScrollEvents","connectedCallback","contentEl","_a","_b","label","closest","getScrollElement","console","error","sent","clientHeight","disconnectedCallback","undefined","complete","prev_1","requestAnimationFrame","newScrollTop","shouldListen","addEventListener","removeEventListener","render","mode","class","Object","defineProperty","get","enumerable","configurable","style","InfiniteScrollContent","componentDidLoad","loadingSpinner","name","loadingText","innerHTML","ios","md"],"mappings":"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","file":"static/js/46.d70b0c21.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, e as createEvent, c as writeTask, f as readTask, h, i as getElement, H as Host } from './index-92848855.js';\nimport { b as getIonMode, c as config } from './ionic-global-23e7365a.js';\nimport { s as sanitizeDOMString } from './index-79d74e0b.js';\nvar infiniteScrollCss = \"ion-infinite-scroll{display:none;width:100%}.infinite-scroll-enabled{display:block}\";\n\nvar InfiniteScroll =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.ionInfinite = createEvent(this, \"ionInfinite\", 7);\n    this.thrPx = 0;\n    this.thrPc = 0;\n    this.didFire = false;\n    this.isBusy = false;\n    this.isLoading = false;\n    /**\n     * The threshold distance from the bottom\n     * of the content to call the `infinite` output event when scrolled.\n     * The threshold value can be either a percent, or\n     * in pixels. For example, use the value of `10%` for the `infinite`\n     * output event to get called when the user has scrolled 10%\n     * from the bottom of the page. Use the value `100px` when the\n     * scroll is within 100 pixels from the bottom of the page.\n     */\n\n    this.threshold = '15%';\n    /**\n     * If `true`, the infinite scroll will be hidden and scroll event listeners\n     * will be removed.\n     *\n     * Set this to true to disable the infinite scroll from actively\n     * trying to receive new data while scrolling. This is useful\n     * when it is known that there is no more data that can be added, and\n     * the infinite scroll is no longer needed.\n     */\n\n    this.disabled = false;\n    /**\n     * The position of the infinite scroll element.\n     * The value can be either `top` or `bottom`.\n     */\n\n    this.position = 'bottom';\n\n    this.onScroll = function () {\n      var scrollEl = _this.scrollEl;\n\n      if (!scrollEl || !_this.canStart()) {\n        return 1;\n      }\n\n      var infiniteHeight = _this.el.offsetHeight;\n\n      if (infiniteHeight === 0) {\n        // if there is no height of this element then do nothing\n        return 2;\n      }\n\n      var scrollTop = scrollEl.scrollTop;\n      var scrollHeight = scrollEl.scrollHeight;\n      var height = scrollEl.offsetHeight;\n      var threshold = _this.thrPc !== 0 ? height * _this.thrPc : _this.thrPx;\n      var distanceFromInfinite = _this.position === 'bottom' ? scrollHeight - infiniteHeight - scrollTop - threshold - height : scrollTop - infiniteHeight - threshold;\n\n      if (distanceFromInfinite < 0) {\n        if (!_this.didFire) {\n          _this.isLoading = true;\n          _this.didFire = true;\n\n          _this.ionInfinite.emit();\n\n          return 3;\n        }\n      } else {\n        _this.didFire = false;\n      }\n\n      return 4;\n    };\n  }\n\n  class_1.prototype.thresholdChanged = function () {\n    var val = this.threshold;\n\n    if (val.lastIndexOf('%') > -1) {\n      this.thrPx = 0;\n      this.thrPc = parseFloat(val) / 100;\n    } else {\n      this.thrPx = parseFloat(val);\n      this.thrPc = 0;\n    }\n  };\n\n  class_1.prototype.disabledChanged = function () {\n    var disabled = this.disabled;\n\n    if (disabled) {\n      this.isLoading = false;\n      this.isBusy = false;\n    }\n\n    this.enableScrollEvents(!disabled);\n  };\n\n  class_1.prototype.connectedCallback = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var contentEl, _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            contentEl = this.el.closest('ion-content');\n\n            if (!contentEl) {\n              console.error('<ion-infinite-scroll> must be used inside an <ion-content>');\n              return [2\n              /*return*/\n              ];\n            }\n\n            _a = this;\n            return [4\n            /*yield*/\n            , contentEl.getScrollElement()];\n\n          case 1:\n            _a.scrollEl = _b.sent();\n            this.thresholdChanged();\n            this.disabledChanged();\n\n            if (this.position === 'top') {\n              writeTask(function () {\n                if (_this.scrollEl) {\n                  _this.scrollEl.scrollTop = _this.scrollEl.scrollHeight - _this.scrollEl.clientHeight;\n                }\n              });\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.disconnectedCallback = function () {\n    this.enableScrollEvents(false);\n    this.scrollEl = undefined;\n  };\n  /**\n   * Call `complete()` within the `ionInfinite` output event handler when\n   * your async operation has completed. For example, the `loading`\n   * state is while the app is performing an asynchronous operation,\n   * such as receiving more data from an AJAX request to add more items\n   * to a data list. Once the data has been received and UI updated, you\n   * then call this method to signify that the loading has completed.\n   * This method will change the infinite scroll's state from `loading`\n   * to `enabled`.\n   */\n\n\n  class_1.prototype.complete = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var scrollEl, prev_1;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        scrollEl = this.scrollEl;\n\n        if (!this.isLoading || !scrollEl) {\n          return [2\n          /*return*/\n          ];\n        }\n\n        this.isLoading = false;\n\n        if (this.position === 'top') {\n          /**\n           * New content is being added at the top, but the scrollTop position stays the same,\n           * which causes a scroll jump visually. This algorithm makes sure to prevent this.\n           * (Frame 1)\n           *    - complete() is called, but the UI hasn't had time to update yet.\n           *    - Save the current content dimensions.\n           *    - Wait for the next frame using _dom.read, so the UI will be updated.\n           * (Frame 2)\n           *    - Read the new content dimensions.\n           *    - Calculate the height difference and the new scroll position.\n           *    - Delay the scroll position change until other possible dom reads are done using _dom.write to be performant.\n           * (Still frame 2, if I'm correct)\n           *    - Change the scroll position (= visually maintain the scroll position).\n           *    - Change the state to re-enable the InfiniteScroll.\n           *    - This should be after changing the scroll position, or it could\n           *    cause the InfiniteScroll to be triggered again immediately.\n           * (Frame 3)\n           *    Done.\n           */\n          this.isBusy = true;\n          prev_1 = scrollEl.scrollHeight - scrollEl.scrollTop; // ******** DOM READ ****************\n\n          requestAnimationFrame(function () {\n            readTask(function () {\n              // UI has updated, save the new content dimensions\n              var scrollHeight = scrollEl.scrollHeight; // New content was added on top, so the scroll position should be changed immediately to prevent it from jumping around\n\n              var newScrollTop = scrollHeight - prev_1; // ******** DOM WRITE ****************\n\n              requestAnimationFrame(function () {\n                writeTask(function () {\n                  scrollEl.scrollTop = newScrollTop;\n                  _this.isBusy = false;\n                });\n              });\n            });\n          });\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  class_1.prototype.canStart = function () {\n    return !this.disabled && !this.isBusy && !!this.scrollEl && !this.isLoading;\n  };\n\n  class_1.prototype.enableScrollEvents = function (shouldListen) {\n    if (this.scrollEl) {\n      if (shouldListen) {\n        this.scrollEl.addEventListener('scroll', this.onScroll);\n      } else {\n        this.scrollEl.removeEventListener('scroll', this.onScroll);\n      }\n    }\n  };\n\n  class_1.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    var disabled = this.disabled;\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, _a['infinite-scroll-loading'] = this.isLoading, _a['infinite-scroll-enabled'] = !disabled, _a)\n    });\n  };\n\n  Object.defineProperty(class_1.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"watchers\", {\n    get: function get() {\n      return {\n        \"threshold\": [\"thresholdChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return class_1;\n}();\n\nInfiniteScroll.style = infiniteScrollCss;\nvar infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\nvar infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{margin-left:32px;margin-right:32px;margin-top:4px;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.infinite-loading-text{margin-left:unset;margin-right:unset;-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px}}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nvar InfiniteScrollContent =\n/** @class */\nfunction () {\n  function InfiniteScrollContent(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  InfiniteScrollContent.prototype.componentDidLoad = function () {\n    if (this.loadingSpinner === undefined) {\n      var mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  };\n\n  InfiniteScrollContent.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, // Used internally for styling\n      _a[\"infinite-scroll-content-\" + mode] = true, _a)\n    }, h(\"div\", {\n      class: \"infinite-loading\"\n    }, this.loadingSpinner && h(\"div\", {\n      class: \"infinite-loading-spinner\"\n    }, h(\"ion-spinner\", {\n      name: this.loadingSpinner\n    })), this.loadingText && h(\"div\", {\n      class: \"infinite-loading-text\",\n      innerHTML: sanitizeDOMString(this.loadingText)\n    })));\n  };\n\n  return InfiniteScrollContent;\n}();\n\nInfiniteScrollContent.style = {\n  ios: infiniteScrollContentIosCss,\n  md: infiniteScrollContentMdCss\n};\nexport { InfiniteScroll as ion_infinite_scroll, InfiniteScrollContent as ion_infinite_scroll_content };"],"sourceRoot":""}